{"remainingRequest":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\src\\views\\forms\\advanced.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\src\\views\\forms\\advanced.vue","mtime":1647371712000},{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\babel.config.js","mtime":1647363400000},{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBUb2dnbGUgZnJvbSAiQHZ1ZWZvcm0vdG9nZ2xlIjsKaW1wb3J0IExheW91dCBmcm9tICIuLi8uLi9sYXlvdXRzL21haW4udnVlIjsKaW1wb3J0IFBhZ2VIZWFkZXIgZnJvbSAiQC9jb21wb25lbnRzL3BhZ2UtaGVhZGVyIjsKaW1wb3J0IGFwcENvbmZpZyBmcm9tICIuLi8uLi8uLi9hcHAuY29uZmlnIjsKZXhwb3J0IGRlZmF1bHQgewogIHBhZ2U6IHsKICAgIHRpdGxlOiAiQWR2YW5jZWQiLAogICAgbWV0YTogW3sKICAgICAgbmFtZTogImRlc2NyaXB0aW9uIiwKICAgICAgY29udGVudDogYXBwQ29uZmlnLmRlc2NyaXB0aW9uCiAgICB9XQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiAiRm9ybSBBZHZhbmNlZCIsCiAgICAgIGl0ZW1zOiBbewogICAgICAgIHRleHQ6ICJGb3JtcyIsCiAgICAgICAgaHJlZjogIi8iCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRm9ybSBBZHZhbmNlZCIsCiAgICAgICAgYWN0aXZlOiB0cnVlCiAgICAgIH1dLAogICAgICB2YWx1ZTogdHJ1ZSwKICAgICAgdmFsdWUxOiB0cnVlLAogICAgICB2YWx1ZTI6IHRydWUsCiAgICAgIHZhbHVlMzogdHJ1ZSwKICAgICAgdmFsdWU0OiB0cnVlLAogICAgICBtYXhsZW46ICIiLAogICAgICBkYXRhOiAiIiwKICAgICAgb3B0aW9uOiAiIiwKICAgICAgdGV4dGFyZWE6ICIiLAogICAgICBkZWZhdWx0TnVsbDogbnVsbCwKICAgICAgZGVmYXVsdHNwaW52YWw6IDEKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBUb2dnbGU6IFRvZ2dsZSwKICAgIExheW91dDogTGF5b3V0LAogICAgUGFnZUhlYWRlcjogUGFnZUhlYWRlcgogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmlzRGF0YSgpOwogICAgfSwgMTAwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGlzRGF0YTogZnVuY3Rpb24gaXNEYXRhKCkgewogICAgICB2YXIgcGx1cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInBsdXMiKTsKICAgICAgdmFyIG1pbnVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibWludXMiKTsKCiAgICAgIGlmIChwbHVzKSB7CiAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChwbHVzLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICB2YXIgcGFyID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoIi5pbnB1dC1zdGVwIik7CiAgICAgICAgICAgIHBhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJwcm9kdWN0LXF1YW50aXR5IilbMF0udmFsdWUrKzsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAobWludXMpIHsKICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKG1pbnVzLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgZS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgICB2YXIgcGFyID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoIi5pbnB1dC1zdGVwIik7CiAgICAgICAgICAgIGlmIChwYXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicHJvZHVjdC1xdWFudGl0eSIpWzBdLnZhbHVlID4gMCkgcGFyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInByb2R1Y3QtcXVhbnRpdHkiKVswXS52YWx1ZS0tOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,eAAe;AACbC,MAAI,EAAE;AACJC,SAAK,EAAE,UADH;AAEJC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEL,SAAS,CAACM;AAA1C,KAAD;AAFF,GADO;AAKbC,MALa,kBAKN;AACL,WAAO;AACLL,WAAK,EAAE,eADF;AAELM,WAAK,EAAE,CACL;AACEC,YAAI,EAAE,OADR;AAEEC,YAAI,EAAE;AAFR,OADK,EAKL;AACED,YAAI,EAAE,eADR;AAEEE,cAAM,EAAE;AAFV,OALK,CAFF;AAYLC,WAAK,EAAE,IAZF;AAaLC,YAAM,EAAE,IAbH;AAcLC,YAAM,EAAE,IAdH;AAeLC,YAAM,EAAE,IAfH;AAgBLC,YAAM,EAAE,IAhBH;AAiBLC,YAAM,EAAE,EAjBH;AAkBLV,UAAI,EAAE,EAlBD;AAmBLW,YAAM,EAAE,EAnBH;AAoBLC,cAAQ,EAAE,EApBL;AAqBLC,iBAAW,EAAE,IArBR;AAsBLC,oBAAc,EAAE;AAtBX,KAAP;AAwBD,GA9BY;AA+BbC,YAAU,EAAE;AACVzB,UAAM,EAANA,MADU;AAEVC,UAAM,EAANA,MAFU;AAGVC,cAAU,EAAVA;AAHU,GA/BC;AAoCbwB,SApCa,qBAoCH;AAAA;;AACRC,cAAU,CAAC,YAAM;AACf,WAAI,CAACC,MAAL;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAxCY;AAyCbC,SAAO,EAAE;AACPD,UADO,oBACE;AACP,UAAME,IAAG,GAAIC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,CAAb;AACA,UAAMC,KAAI,GAAIF,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAd;;AAEA,UAAIF,IAAJ,EAAU;AACRI,aAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BP,IAA7B,EAAmC,UAACQ,CAAD,EAAO;AACxCA,WAAC,CAACC,gBAAF,CAAmB,OAAnB,EAA4B,UAACC,KAAD,EAAW;AACrC,gBAAIC,GAAE,GAAID,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,aAArB,CAAV;AACAF,eAAG,CAACT,sBAAJ,CAA2B,kBAA3B,EAA+C,CAA/C,EAAkDjB,KAAlD;AACD,WAHD;AAID,SALD;AAMF;;AAEA,UAAIkB,KAAJ,EAAW;AACTC,aAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BJ,KAA7B,EAAoC,UAACK,CAAD,EAAO;AACzCA,WAAC,CAACC,gBAAF,CAAmB,OAAnB,EAA4B,UAACC,KAAD,EAAW;AACrC,gBAAIC,GAAE,GAAID,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,aAArB,CAAV;AACA,gBAAIF,GAAG,CAACT,sBAAJ,CAA2B,kBAA3B,EAA+C,CAA/C,EAAkDjB,KAAlD,GAA0D,CAA9D,EACE0B,GAAG,CAACT,sBAAJ,CAA2B,kBAA3B,EAA+C,CAA/C,EAAkDjB,KAAlD;AACH,WAJD;AAKD,SAND;AAOF;AACD;AAvBM;AAzCI,CAAf","names":["Toggle","Layout","PageHeader","appConfig","page","title","meta","name","content","description","data","items","text","href","active","value","value1","value2","value3","value4","maxlen","option","textarea","defaultNull","defaultspinval","components","mounted","setTimeout","isData","methods","plus","document","getElementsByClassName","minus","Array","prototype","forEach","call","e","addEventListener","event","par","target","closest"],"sourceRoot":"","sources":["C:\\Users\\erzafahmifasya\\Documents\\GitHub\\Vue-Perpus\\src\\views\\forms\\advanced.vue"],"sourcesContent":["<script>\nimport Toggle from \"@vueform/toggle\";\n\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\n\nexport default {\n  page: {\n    title: \"Advanced\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Form Advanced\",\n      items: [\n        {\n          text: \"Forms\",\n          href: \"/\",\n        },\n        {\n          text: \"Form Advanced\",\n          active: true,\n        },\n      ],\n      value: true,\n      value1: true,\n      value2: true,\n      value3: true,\n      value4: true,\n      maxlen: \"\",\n      data: \"\",\n      option: \"\",\n      textarea: \"\",\n      defaultNull: null,\n      defaultspinval: 1,\n    };\n  },\n  components: {\n    Toggle,\n    Layout,\n    PageHeader,\n  },\n  mounted() {\n    setTimeout(() => {\n      this.isData();\n    }, 100);\n  },\n  methods: {\n    isData() {\n      const plus = document.getElementsByClassName(\"plus\");\n      const minus = document.getElementsByClassName(\"minus\");\n\n      if (plus) {\n        Array.prototype.forEach.call(plus, (e) => {\n          e.addEventListener(\"click\", (event) => {\n            let par = event.target.closest(\".input-step\");\n            par.getElementsByClassName(\"product-quantity\")[0].value++;\n          });\n        });\n      }\n\n      if (minus) {\n        Array.prototype.forEach.call(minus, (e) => {\n          e.addEventListener(\"click\", (event) => {\n            let par = event.target.closest(\".input-step\");\n            if (par.getElementsByClassName(\"product-quantity\")[0].value > 0)\n              par.getElementsByClassName(\"product-quantity\")[0].value--;\n          });\n        });\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4 class=\"card-title mb-0\">Form Input Spin</h4>\n          </div>\n          <!-- end card header -->\n\n          <div class=\"card-body\">\n            <div>\n              <div class=\"row gy-4\">\n                <div class=\"col-sm-6\">\n                  <div>\n                    <h5 class=\"fs-13 fw-medium text-muted\">Default</h5>\n\n                    <div class=\"input-step\">\n                      <button type=\"button\" class=\"minus\">–</button>\n                      <input\n                        type=\"number\"\n                        class=\"product-quantity\"\n                        value=\"2\"\n                        min=\"0\"\n                        max=\"100\"\n                        readonly\n                      />\n                      <button type=\"button\" class=\"plus\">+</button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-sm-6\">\n                  <div>\n                    <h5 class=\"fs-13 fw-medium text-muted\">Light</h5>\n                    <div class=\"input-step light\">\n                      <button type=\"button\" class=\"minus\">–</button>\n                      <input\n                        type=\"number\"\n                        class=\"product-quantity\"\n                        value=\"5\"\n                        min=\"0\"\n                        max=\"100\"\n                        readonly\n                      />\n                      <button type=\"button\" class=\"plus\">+</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- end row -->\n\n              <div class=\"mt-4 pt-2\">\n                <div class=\"row gy-4\">\n                  <div class=\"col-sm-6\">\n                    <div>\n                      <h5 class=\"fs-13 fw-medium text-muted\">\n                        Default (Full width)\n                      </h5>\n                      <div class=\"input-step full-width\">\n                        <button type=\"button\" class=\"minus\">–</button>\n                        <input\n                          type=\"number\"\n                          class=\"product-quantity\"\n                          value=\"4\"\n                          min=\"0\"\n                          max=\"100\"\n                          readonly\n                        />\n                        <button type=\"button\" class=\"plus\">+</button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"col-sm-6\">\n                    <div>\n                      <h5 class=\"fs-13 fw-medium text-muted\">\n                        Light (Full width)\n                      </h5>\n                      <div class=\"input-step full-width light\">\n                        <button type=\"button\" class=\"minus\">–</button>\n                        <input\n                          type=\"number\"\n                          class=\"product-quantity\"\n                          value=\"6\"\n                          min=\"0\"\n                          max=\"100\"\n                          readonly\n                        />\n                        <button type=\"button\" class=\"plus\">+</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- end row -->\n              </div>\n\n              <div class=\"row mt-4 pt-2\">\n                <h5 class=\"fs-13 fw-medium text-muted\">Colored</h5>\n                <div class=\"d-flex flex-wrap align-items-start gap-2\">\n                  <div class=\"input-step step-primary\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"6\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                  <div class=\"input-step step-secondary\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"1\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                  <div class=\"input-step step-success\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"3\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                  <div class=\"input-step step-info\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"1\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                  <div class=\"input-step step-warning\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"4\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                  <div class=\"input-step step-danger\">\n                    <button type=\"button\" class=\"minus\">–</button>\n                    <input\n                      type=\"number\"\n                      class=\"product-quantity\"\n                      value=\"5\"\n                      min=\"0\"\n                      max=\"100\"\n                      readonly\n                    />\n                    <button type=\"button\" class=\"plus\">+</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- end card-body -->\n        </div>\n        <!-- end card -->\n      </div>\n      <!-- end col -->\n    </div>\n    <!-- end row -->\n\n    <div class=\"row\">\n      <div class=\"col-lg-6\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Bootstrap MaxLength</h4>\n\n            <label class=\"mb-1 fw-medium\">Default usage</label>\n            <p class=\"text-muted font-13\">\n              The badge will show up by default when the remaining chars are 10\n              or less:\n            </p>\n            <input\n              v-model=\"maxlen\"\n              type=\"text\"\n              class=\"form-control\"\n              :maxlength=\"10\"\n            />\n            <div v-if=\"maxlen\" class=\"text-center\">\n              <p\n                class=\"badge position-absolute\"\n                :class=\"{\n                  'bg-success': maxlen.length !== 10,\n                  'bg-danger': maxlen.length === 10,\n                }\"\n              >\n                {{ maxlen.length }} / 10\n              </p>\n            </div>\n\n            <div>\n              <label class=\"mb-1 mt-3 fw-medium\">Threshold value</label>\n              <p class=\"text-muted font-13\">\n                Do you want the badge to show up when there are 20 chars or\n                less? Use the\n                <code>threshold</code>\n                option:\n              </p>\n              <input\n                v-model=\"data\"\n                type=\"text\"\n                :maxlength=\"25\"\n                class=\"form-control\"\n              />\n              <div class=\"text-center\">\n                <p\n                  v-if=\"data\"\n                  class=\"badge position-absolute\"\n                  :class=\"{\n                    'bg-success': data.length !== 25,\n                    'bg-danger': data.length === 25,\n                  }\"\n                >\n                  {{ data.length }} / 25\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <label class=\"mb-1 mt-3 fw-medium\">All the options</label>\n              <p class=\"text-muted font-13\">\n                Please note: if the\n                <code>alwaysShow</code> option is enabled, the\n                <code>threshold</code> option is ignored.\n              </p>\n              <input\n                v-model=\"option\"\n                type=\"text\"\n                class=\"form-control\"\n                :maxlength=\"25\"\n              />\n              <div class=\"text-center\">\n                <p\n                  v-if=\"option\"\n                  class=\"badge position-absolute\"\n                  :class=\"{\n                    'bg-success': option.length !== 25,\n                    'bg-danger': option.length === 25,\n                  }\"\n                >\n                  You typed\n                  {{ option.length }} out of 25 chars available.\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <label class=\"mb-1 mt-3 fw-medium\">Textarea</label>\n              <p class=\"text-muted font-13\">\n                Bootstrap maxlength supports textarea as well as inputs. Even on\n                old IE.\n              </p>\n              <textarea\n                v-model=\"textarea\"\n                class=\"form-control\"\n                :maxlength=\"225\"\n                rows=\"3\"\n                placeholder=\"This textarea has a limit of 225 chars.\"\n              ></textarea>\n              <div class=\"text-center\">\n                <p\n                  v-if=\"textarea\"\n                  class=\"badge position-absolute\"\n                  :class=\"{\n                    'bg-success': textarea.length !== 225,\n                    'bg-danger': textarea.length === 225,\n                  }\"\n                >\n                  {{ textarea.length }} / 225\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4 class=\"card-title mb-1\">Switch</h4>\n\n            <p class=\"text-muted font-13\">Use <code>@vueform/toggle</code> for below switches.</p>\n\n            <div class=\"card-body\">\n              <Toggle v-model=\"value\" class=\"toggle-red me-2\" />\n              <Toggle v-model=\"value1\" class=\"toggle-blue me-2\" />\n              <Toggle\n                v-model=\"value2\"\n                class=\"toggle-primary me-2\"\n                on-label=\"On\"\n                off-label=\"Off\"\n              />\n              <Toggle v-model=\"value3\" class=\"toggle-warning me-2\" />\n              <Toggle v-model=\"value4\" class=\"toggle-info\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n</template>\n"]}]}